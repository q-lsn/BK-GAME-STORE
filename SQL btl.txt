/*
drop table user;
drop table product;
drop table transactions;
drop table sales_event;
drop table publisher;
drop table trade_box;
drop table _trade_box_contain;
drop table games;
drop table reviews;
drop table game_tag;
drop table _follow;
drop table workshop_items;
drop table _subcribe;
drop table _mods;
drop table mods_changelog;
drop table _share_income;
drop table artworks;
drop table artwork_style;
drop table _own;
drop table _discount;
drop table wallet;
drop table _purchase;
drop table account_bank;
drop table items_and_dlcs;
drop table forum;
drop table _discuss;
drop table _discuss_reply;
*/

create table USER(
  account_id char(9),
  user_name text(20) NOT NULL,
  date_of_birth date NOT NULL,
  country text(20) NOT NULL,
  email text(40) NOT NULL,
  phone_number text(9),
  PRIMARY KEY (account_id)
);

create table PRODUCT(
  product_id char(9),
  PRIMARY KEY (product_id)
);

create table TRANSACTIONS( /*them s vao ten de khoi bi loi*/
  transaction_id char(9),
  PRIMARY KEY (transaction_id)
);

create table SALES_EVENT(
  sales_id char(9),
  sales_name text(80) NOT NULL,
  date_start date,
  date_end date,
  PRIMARY KEY (sales_id)
);

create table PUBLISHER(
  publisher_id char(9),
  website text(200),
  name text(80) NOT NULL,
  PRIMARY KEY (publisher_id)
);

create table TRADE_BOX(
  user_id char(9),
  tradebox_id char(9),
  toffer_tradebox  char(9),
  date_traded date,
  trade_method text(20),
  PRIMARY KEY (user_id, tradebox_id),
  FOREIGN KEY (toffer_tradebox) REFERENCES TRADE_BOX(tradebox_id),
  FOREIGN KEY (user_id) REFERENCES USER(account_id)
);

create table _TRADE_BOX_CONTAIN(
  product_id char(9),
  tradebox_id char(9),
  trade_quantily int DEFAULT 1,
  PRIMARY KEY (product_id, tradebox_id),
  FOREIGN KEY (product_id) REFERENCES PRODUCT(product_id),
  FOREIGN KEY (tradebox_id) REFERENCES TRADE_BOX(tradebox_id),
  CHECK (trade_quantily>0)
);

create table GAMES(
  game_id char(9),
  game_name text(80) NOT NULL,
  game_price decimal(10,2) NOT NULL,
  engine text(20) NOT NULL,
  description text(2000),
  game_publisher char(9) NOT NULL,
  date_released date,
  product_id char(9) NOT NULL,
  PRIMARY KEY (game_id),
  FOREIGN KEY (game_publisher) REFERENCES PUBLISHER(publisher_id),
  FOREIGN KEY (product_id) REFERENCES PRODUCT(product_id),
  CHECK (game_price >=0)
);

create table REVIEWS(
  game_review char(9),
  review_id char(9),
  rating_score bool NOT NULL,
  comment text(800),
  date_posted date,
  feedback_user char(9) NOT NULL,
  PRIMARY KEY (game_review,review_id),
  FOREIGN KEY (game_review) REFERENCES GAMES(game_id),
  FOREIGN KEY (feedback_user) REFERENCES USER(account_id)
);

create table GAME_TAG(
  game_id char(9),
  tag text(20),
  PRIMARY KEY (game_id, tag),
  FOREIGN KEY (game_id) REFERENCES GAMES(game_id)
);

create table _FOLLOW(
  follow_user char(9),
  publisher char(9),
  PRIMARY KEY(follow_user, publisher),
  FOREIGN KEY (follow_user) REFERENCES USER(account_id)
);

create table WORKSHOP_ITEMS(
  workshop_id char(9),
  date_posted date,
  description text(2000),
  create_user char(9) NOT NULL,
  PRIMARY KEY (workshop_id),
  FOREIGN KEY (create_user) REFERENCES USER(account_id)
);

create table _SUBCRIBE(
  workshop_id char(9),
  user_id char(9),
  PRIMARY KEY (workshop_id, user_id),
  FOREIGN KEY (user_id) REFERENCES USER(account_id),
  FOREIGN KEY (workshop_id) REFERENCES WORKSHOP_ITEMS(workshop_id)
);

create table _MODS(
  workshop_id char(9),
  name text(80) NOT NULL,
  game_applied char(9) NOT NULL,
  compatible bool NOT NULL,
  PRIMARY KEY (workshop_id),
  FOREIGN KEY (game_applied) REFERENCES GAMES(game_id),
  FOREIGN KEY (workshop_id) REFERENCES WORKSHOP_ITEMS(workshop_id)
);

create table MODS_CHANGELOG(
  workshop_id char(9),
  change_log text(200),
  PRIMARY KEY (workshop_id,change_log),
  FOREIGN KEY (workshop_id) REFERENCES MODS(workshop_id)
);

create table _SHARE_INCOME(
  publisher_id char(9),
  transaction_id char(9),
  percent_shared decimal(10,2) NOT NULL,
  PRIMARY KEY (publisher_id, transaction_id),
  FOREIGN KEY (publisher_id) REFERENCES PUBLISHER(publisher_id),
  FOREIGN KEY (transaction_id) REFERENCES TRANSACTIONS(transaction_id),
  CHECK ( percent_shared>=0 and percent_shared<=100)
);

create table ARTWORKS(
  workshop_id char(9),
  caption text(200) NOT NULL,
  PRIMARY KEY (workshop_id),
  FOREIGN KEY (workshop_id) REFERENCES WORKSHOP_ITEMS(workshop_id)
);

create table ARTWORK_STYLE(
  workshop_id char(9),
  style text(20),
  PRIMARY KEY (workshop_id,style),
  FOREIGN KEY (workshop_id) REFERENCES ARTWORKS(workshop_id)
);

create table _OWN( 
  product_id char(9),
  user_id char(9),
  tradeable bool NOT NULL,
  quantity int,
  PRIMARY KEY  (product_id, user_id),
  FOREIGN KEY (user_id) REFERENCES USER(account_id),
  FOREIGN KEY (product_id) REFERENCES PRODUCT(product_id),
  CHECK (quantity >0)
);

create table _DISCOUNT(
  product_id  char(9),
  sales_event char(9),
  percent_discounted decimal(10,2) NOT NULL,
  PRIMARY KEY (product_id, sales_event),
  FOREIGN KEY (product_id) REFERENCES PRODUCT(product_id),
  FOREIGN KEY (sales_event) REFERENCES SALES_EVENT(sales_id),
  CHECK ( sales_event>=0 and sales_event<=100)
);

create table WALLET(
  wallet_id char(9),
  user_id char(9),
  balance decimal(10,2) DEFAULT 0,
  PRIMARY KEY (wallet_id, user_id),
  FOREIGN KEY (user_id) REFERENCES USER(account_id),
  CHECK (balance >=0)
);

create table _PURCHASE(
  product_id  char(9),
  transaction_id char(9),
  wallet_id char(9) NOT NULL,
  user_id char(9) NOT NULL,
  date_purchased  date,
  purchased_quantily int NOT NULL,
  PRIMARY KEY (product_id, transaction_id),
  FOREIGN KEY (user_id) REFERENCES WALLET(user_id),
  FOREIGN KEY (wallet_id) REFERENCES WALLET(wallet_id),
  FOREIGN KEY (product_id) REFERENCES PRODUCT(product_id),
  FOREIGN KEY (transaction_id) REFERENCES TRANSACTIONS(transaction_id),
  CHECK (purchased_quantily >0)
);

create table  ACCOUNT_BANK(
  wallet_id char(9),
  user_id char(9),
  date_activated date,
  bank_name text(60),
  pin char(6),
  PRIMARY KEY (wallet_id, user_id, date_activated, bank_name, pin),
  FOREIGN KEY (user_id) REFERENCES WALLET(user_id),
  FOREIGN KEY (wallet_id) REFERENCES WALLET(wallet_id)
);

create table ITEMS_AND_DLCS(
  game_id char(9),
  sub_id char(9),
  name  text(80) NOT NULL,
  type text(20) NOT NULL,
  bundle text(80) NOT NULL,
  price decimal(10,2)  DEFAULT 0,
  product_id char(9) NOT NULL,
  PRIMARY KEY (game_id,sub_id),
  FOREIGN KEY (game_id) REFERENCES GAMES(game_id),
  FOREIGN KEY (product_id) REFERENCES PRODUCT(product_id),
  CHECK (price>=0)
);

create table FORUM(
  forum_id char(9),
  title text(80) NOT NULL,
  status text(20) NOT NULL,
  content text(2000),
  media_url text(200),
  create_user char(9) NOT NULL,
  date_created date,
  game_discuss char(9) NOT NULL,
  PRIMARY KEY (forum_id),
  FOREIGN KEY (create_user) REFERENCES USER(account_id),
  FOREIGN KEY (game_discuss) REFERENCES GAMES(game_id)
);

create table _DISCUSS(
  discuss_forum  char(9),
  discuss_user char(9),
  date_replied date,
  PRIMARY KEY (discuss_forum, discuss_user),
  FOREIGN KEY (discuss_forum) REFERENCES FORUM(forum_id),
  FOREIGN KEY (discuss_user) REFERENCES USER(account_id)
);

create table _DISCUSS_REPLY(
  discuss_forum char(9),
  discuss_user char(9),
  media_url text(200),
  reply text(800) NOT NULL,
  no_reply int NOT NULL,
  PRIMARY KEY (discuss_forum, discuss_user, media_url, reply, no_reply),
  FOREIGN KEY (discuss_forum) REFERENCES _DISCUSS(discuss_forum),
  FOREIGN KEY (discuss_user) REFERENCES _DISCUSS(discuss_user)
);


